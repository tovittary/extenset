[*]

#### Code Editor ####

charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = space
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

#### Code Editor End ####

[*.{cs,vb}]

#### Analyzers ####

# CA1054: Uri parameters should not be strings
dotnet_diagnostic.CA1054.severity = none

# CA1056: Uri properties should not be strings
dotnet_diagnostic.CA1056.severity = suggestion

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = none

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = none

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = none

#### Analyzers End ####

#### Code Style ####

# IDE0003 and IDE0009: this and Me preferences
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# IDE0017: Use object initializers
dotnet_style_object_initializer = true:suggestion

# IDE0028: Use collection initializers
dotnet_style_collection_initializer = true:suggestion

# IDE0029 and IDE0030: Use coalesce expression
dotnet_style_coalesce_expression = true:suggestion

# IDE0031: Use null propagation
dotnet_style_null_propagation = true:suggestion

# IDE0032: Use auto property
dotnet_style_prefer_auto_properties = true:suggestion

# IDE0033: Use explicitly provided tuple name
dotnet_style_explicit_tuple_names = true:suggestion

# IDE0037: Use inferred member name
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion

# IDE0040: Add accessibility modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

# IDE0041: Use is null check
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# IDE0044: Add readonly modifier
dotnet_style_readonly_field = true:warning

# IDE0045: Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion

# IDE0046: Use conditional expression for return
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

# IDE0047 and IDE0048: Parentheses preferences
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion

# IDE0049: Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

# IDE0054 and IDE0074: Use compound assignment
dotnet_style_prefer_compound_assignment = true:suggestion

# IDE0055: Organize usings
dotnet_sort_system_directives_first = true:warning
dotnet_separate_import_directive_groups = true:warning

# IDE0060: Remove unused parameter
dotnet_code_quality_unused_parameters = all:warning

# IDE0065: 'using' directive placement
csharp_using_directive_placement = inside_namespace:warning

# IDE0071: Simplify interpolation
dotnet_style_prefer_simplified_interpolation = true:suggestion

# IDE0075: Simplify conditional expression
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion

# IDE0090: Simplify new expression
# Disabled due to conflict with SA1000.
# The next stable version of StyleCop.Analyzers should fix this.
csharp_style_implicit_object_creation_when_type_is_apparent = false:suggestion

# Others
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_namespace_match_folder = true:silent
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = false:warning

# ReSharper
resharper_braces_for_dowhile = required
resharper_braces_for_fixed = required
resharper_braces_for_for = required_for_multiline
resharper_braces_for_foreach = required_for_multiline
resharper_braces_for_ifelse = required_for_multiline
resharper_braces_for_lock = required
resharper_braces_for_using = required
resharper_braces_for_while = required_for_multiline
resharper_constructor_or_destructor_body = expression_body
resharper_method_or_operator_body = expression_body
resharper_use_heuristics_for_body_style = true

#### Code Style End ####

#### Naming Styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_field_should_be_begins_with_underscore.severity = warning
dotnet_naming_rule.private_field_should_be_begins_with_underscore.symbols = private_field
dotnet_naming_rule.private_field_should_be_begins_with_underscore.style = begins_with_underscore

dotnet_naming_rule.private_static_readonly_should_be_pascal_case.severity = warning
dotnet_naming_rule.private_static_readonly_should_be_pascal_case.symbols = private_static_readonly
dotnet_naming_rule.private_static_readonly_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_const_should_be_pascal_case.severity = warning
dotnet_naming_rule.private_const_should_be_pascal_case.symbols = private_const
dotnet_naming_rule.private_const_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private
dotnet_naming_symbols.private_field.required_modifiers =

dotnet_naming_symbols.private_static_readonly.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly.required_modifiers = readonly, static

dotnet_naming_symbols.private_const.applicable_kinds = field
dotnet_naming_symbols.private_const.applicable_accessibilities = private
dotnet_naming_symbols.private_const.required_modifiers = const

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix =
dotnet_naming_style.begins_with_underscore.word_separator =
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

#### Naming Styles End ####

[*.cs]

#### Code Style ####

# IDE0007 and IDE0008: 'var' preferences
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:silent

# IDE0011: Add braces
csharp_prefer_braces = when_multiline:warning

# IDE0016: Use throw expression
csharp_style_throw_expression = true:suggestion

# IDE0018: Inline variable declaration
csharp_style_inlined_variable_declaration = true:suggestion

# IDE0019: Use pattern matching to avoid 'as' followed by a 'null' check
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# IDE0020: Use pattern matching to avoid 'is' check followed by a cast
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

# IDE0021: Use expression body for constructors
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion

# IDE0022: Use expression body for methods
csharp_style_expression_bodied_methods = when_on_single_line:suggestion

# IDE0023 and IDE0024: Use expression body for operators
csharp_style_expression_bodied_operators = when_on_single_line:suggestion

# IDE0025: Use expression body for properties
csharp_style_expression_bodied_properties = when_on_single_line:suggestion

# IDE0026: Use expression body for indexers
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion

# IDE0027: Use expression body for accessors
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion

# IDE0034: Simplify 'default' expression
csharp_prefer_simple_default_expression = true:suggestion

# IDE0042: Deconstruct variable declaration
csharp_style_deconstructed_variable_declaration = true:suggestion

# IDE0053: Use expression body for lambdas
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion

# IDE0056: Use index operator
csharp_style_prefer_index_operator = true:suggestion

# IDE0057: Use range operator
csharp_style_prefer_range_operator = true:suggestion

# IDE0058: Remove unnecessary expression value
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# IDE0059: Remove unnecessary value assignment
csharp_style_unused_value_assignment_preference = discard_variable:warning

# IDE0061: Use expression body for local functions
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion

# IDE0062: Make local function static
csharp_prefer_static_local_function = true:suggestion

# IDE0063: Use simple 'using' statement
csharp_prefer_simple_using_statement = true:suggestion

# IDE0066: Use switch expression
csharp_style_prefer_switch_expression = true:suggestion

# IDE0078: Use pattern matching
csharp_style_prefer_pattern_matching = true:suggestion

# IDE0083: Use pattern matching (not operator)
csharp_style_prefer_not_pattern = true:suggestion

# IDE0090: Simplify new expression
# Disabled due to conflict with SA1000.
# The next stable version of StyleCop.Analyzers should fix this.
csharp_style_implicit_object_creation_when_type_is_apparent = false:suggestion

# IDE0160: Convert to block-scoped namespace
csharp_style_namespace_declarations = file_scoped:warning

# IDE1005: Use conditional delegate call
csharp_style_conditional_delegate_call = true:suggestion

# Others
csharp_indent_labels = one_less_than_current
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_space_around_binary_operators = before_and_after
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_prefer_extended_property_pattern = true:suggestion

#### Code Style End ####
